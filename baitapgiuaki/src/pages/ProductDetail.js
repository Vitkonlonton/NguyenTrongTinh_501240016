import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import products from '../data/products';
import './ProductDetail.css';

const ProductDetail = ({ addToCart, addToWishlist, wishlist }) => {
  const { id } = useParams();
  const [product, setProduct] = useState(null);
  const [selectedImage, setSelectedImage] = useState(0);
  const [quantity, setQuantity] = useState(1);
  const [activeTab, setActiveTab] = useState('description');
  const [reviews, setReviews] = useState([]);
  const [newReview, setNewReview] = useState({
    rating: 5,
    comment: '',
    author: ''
  });

  useEffect(() => {
    const foundProduct = products.find(p => p.id === parseInt(id));
    setProduct(foundProduct);
    
    // Load reviews from localStorage
    const savedReviews = JSON.parse(localStorage.getItem(`product_${id}_reviews`) || '[]');
    setReviews(savedReviews);
  }, [id]);

  const handleAddToCart = () => {
    for (let i = 0; i < quantity; i++) {
      addToCart(product);
    }
    alert(`ƒê√£ th√™m ${quantity} ${product.name} v√†o gi·ªè h√†ng!`);
  };

  const handleAddToWishlist = () => {
    addToWishlist(product);
  };

  const handleReviewSubmit = (e) => {
    e.preventDefault();
    if (!newReview.author || !newReview.comment) {
      alert('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin ƒë√°nh gi√°!');
      return;
    }

    const review = {
      ...newReview,
      id: Date.now(),
      date: new Date().toLocaleDateString('vi-VN'),
      productId: product.id
    };

    const updatedReviews = [...reviews, review];
    setReviews(updatedReviews);
    localStorage.setItem(`product_${id}_reviews`, JSON.stringify(updatedReviews));
    
    setNewReview({ rating: 5, comment: '', author: '' });
    alert('C·∫£m ∆°n b·∫°n ƒë√£ ƒë√°nh gi√° s·∫£n ph·∫©m!');
  };

  const formatPrice = (price) => {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND'
    }).format(price);
  };

  const calculateAverageRating = () => {
    if (reviews.length === 0) return 0;
    const total = reviews.reduce((sum, review) => sum + review.rating, 0);
    return (total / reviews.length).toFixed(1);
  };

  if (!product) {
    return (
      <div className="product-detail-page">
        <div className="container">
          <div className="product-not-found">
            <h2>Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m</h2>
            <p>S·∫£n ph·∫©m b·∫°n ƒëang t√¨m ki·∫øm kh√¥ng t·ªìn t·∫°i.</p>
          </div>
        </div>
      </div>
    );
  }

  const isInWishlist = wishlist.some(item => item.id === product.id);

  return (
    <div className="product-detail-page">
      <div className="container">
        {/* Breadcrumb */}
        <div className="breadcrumb">
          <a href="#home">Trang ch·ªß</a>
          <span> / </span>
          <a href="#products">S·∫£n ph·∫©m</a>
          <span> / </span>
          <span className="current">{product.name}</span>
        </div>

        <div className="product-detail-content">
          {/* Product Images */}
          <div className="product-images-section">
            <div className="main-image">
              <img src={product.image} alt={product.name} />
              <div className="image-badge">üî• B√°n ch·∫°y</div>
            </div>
          </div>

          {/* Product Info */}
          <div className="product-info-section">
            <div className="product-header">
              <h1>{product.name}</h1>
              <button 
                className={`wishlist-btn ${isInWishlist ? 'in-wishlist' : ''}`}
                onClick={handleAddToWishlist}
                title={isInWishlist ? 'ƒê√£ y√™u th√≠ch' : 'Th√™m v√†o y√™u th√≠ch'}
              >
                {isInWishlist ? '‚ù§Ô∏è' : 'ü§ç'}
              </button>
            </div>

            <div className="product-rating">
              <div className="stars">
                {'‚òÖ'.repeat(5)}
                <span className="rating-text">({reviews.length} ƒë√°nh gi√°)</span>
              </div>
              <div className="average-rating">
                ‚≠ê {calculateAverageRating()}/5
              </div>
            </div>

            <div className="product-price-detail">
              <span className="current-price">{formatPrice(product.price)}</span>
              <span className="original-price">{formatPrice(product.price * 1.2)}</span>
              <span className="discount-badge">-20%</span>
            </div>

            <div className="product-description-detail">
              <p>{product.description}</p>
            </div>

            <div className="product-features">
              <div className="feature">
                <span className="feature-icon">üöö</span>
                <div>
                  <strong>Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn</strong>
                  <p>Cho ƒë∆°n h√†ng t·ª´ 1.000.000ƒë</p>
                </div>
              </div>
              <div className="feature">
                <span className="feature-icon">üîÑ</span>
                <div>
                  <strong>ƒê·ªïi tr·∫£ 7 ng√†y</strong>
                  <p>Ho√†n ti·ªÅn 100%</p>
                </div>
              </div>
              <div className="feature">
                <span className="feature-icon">üéÅ</span>
                <div>
                  <strong>Qu√† t·∫∑ng ƒë·∫∑c bi·ªát</strong>
                  <p>K√®m h·ªôp qu√† cao c·∫•p</p>
                </div>
              </div>
            </div>

            {/* Quantity & Add to Cart */}
            <div className="purchase-section">
              <div className="quantity-selector">
                <label>S·ªë l∆∞·ª£ng:</label>
                <div className="quantity-controls">
                  <button 
                    onClick={() => setQuantity(Math.max(1, quantity - 1))}
                    disabled={quantity <= 1}
                  >
                    ‚àí
                  </button>
                  <span>{quantity}</span>
                  <button 
                    onClick={() => setQuantity(Math.min(10, quantity + 1))}
                    disabled={quantity >= 10}
                  >
                    +
                  </button>
                </div>
              </div>

              <div className="action-buttons">
                <button 
                  className="add-to-cart-detail"
                  onClick={handleAddToCart}
                >
                  üõí Th√™m v√†o gi·ªè h√†ng
                </button>
                <button className="buy-now-btn">
                  üí≥ Mua ngay
                </button>
              </div>
            </div>

            {/* Product Meta */}
            <div className="product-meta">
              <div className="meta-item">
                <strong>SKU:</strong> PERFUME-{product.id}
              </div>
              <div className="meta-item">
                <strong>Danh m·ª•c:</strong> N∆∞·ªõc hoa cao c·∫•p
              </div>
              <div className="meta-item">
                <strong>Tags:</strong> #{product.name.replace(/\s+/g, '')}, #perfume, #luxury
              </div>
            </div>
          </div>
        </div>

        {/* Product Tabs */}
        <div className="product-tabs-section">
          <div className="tabs-header">
            <button 
              className={`tab-btn ${activeTab === 'description' ? 'active' : ''}`}
              onClick={() => setActiveTab('description')}
            >
              üìñ M√¥ t·∫£ s·∫£n ph·∫©m
            </button>
            <button 
              className={`tab-btn ${activeTab === 'specifications' ? 'active' : ''}`}
              onClick={() => setActiveTab('specifications')}
            >
              üìã Th√¥ng s·ªë k·ªπ thu·∫≠t
            </button>
            <button 
              className={`tab-btn ${activeTab === 'reviews' ? 'active' : ''}`}
              onClick={() => setActiveTab('reviews')}
            >
              ‚≠ê ƒê√°nh gi√° ({reviews.length})
            </button>
          </div>

          <div className="tab-content">
            {activeTab === 'description' && (
              <div className="tab-panel">
                <h3>Chi Ti·∫øt S·∫£n Ph·∫©m</h3>
                <p>
                  {product.name} l√† m·ªôt trong nh·ªØng t√°c ph·∫©m ngh·ªá thu·∫≠t h∆∞∆°ng th∆°m ƒë·ªôc ƒë√°o, 
                  ƒë∆∞·ª£c ch·∫ø t√°c t·ªâ m·ªâ b·ªüi c√°c chuy√™n gia h√†ng ƒë·∫ßu trong ng√†nh n∆∞·ªõc hoa. 
                  M·ªói chai {product.name} ƒë·ªÅu mang trong m√¨nh c√¢u chuy·ªán ri√™ng, t·∫°o n√™n 
                  d·∫•u ·∫•n kh√≥ phai trong l√≤ng ng∆∞·ªùi s·ª≠ d·ª•ng.
                </p>
                
                <h4>üéØ ƒê·∫∑c ƒëi·ªÉm n·ªïi b·∫≠t:</h4>
                <ul>
                  <li>H∆∞∆°ng th∆°m l∆∞u gi·ªØ l√¢u ƒë·∫øn 8-12 gi·ªù</li>
                  <li>Thi·∫øt k·∫ø chai ƒë·ª±ng sang tr·ªçng, tinh t·∫ø</li>
                  <li>Th√†nh ph·∫ßn t·ª± nhi√™n, an to√†n cho da</li>
                  <li>Ph√π h·ª£p cho m·ªçi d·ªãp s·ª≠ d·ª•ng</li>
                </ul>

                <h4>üëÉ Ph√¢n t·∫ßng h∆∞∆°ng th∆°m:</h4>
                <div className="scent-pyramid">
                  <div className="scent-level">
                    <strong>H∆∞∆°ng ƒë·∫ßu:</strong> T∆∞∆°i m·ªõi, ·∫•n t∆∞·ª£ng ngay l·∫ßn ƒë·∫ßu ti·∫øp x√∫c
                  </div>
                  <div className="scent-level">
                    <strong>H∆∞∆°ng gi·ªØa:</strong> ·∫§m √°p, quy·∫øn r≈© v√† ƒë·∫ßy c·∫£m x√∫c
                  </div>
                  <div className="scent-level">
                    <strong>H∆∞∆°ng cu·ªëi:</strong> ƒê·∫≠m ƒë√†, l∆∞u luy·∫øn kh√≥ qu√™n
                  </div>
                </div>
              </div>
            )}

            {activeTab === 'specifications' && (
              <div className="tab-panel">
                <h3>Th√¥ng S·ªë K·ªπ Thu·∫≠t</h3>
                <div className="specs-grid">
                  <div className="spec-item">
                    <strong>Dung t√≠ch:</strong>
                    <span>100ml</span>
                  </div>
                  <div className="spec-item">
                    <strong>N·ªìng ƒë·ªô:</strong>
                    <span>Eau de Parfum (EDP)</span>
                  </div>
                  <div className="spec-item">
                    <strong>Xu·∫•t x·ª©:</strong>
                    <span>Ph√°p</span>
                  </div>
                  <div className="spec-item">
                    <strong>Gi·ªõi t√≠nh:</strong>
                    <span>Unisex</span>
                  </div>
                  <div className="spec-item">
                    <strong>ƒê·ªô l∆∞u h∆∞∆°ng:</strong>
                    <span>8-12 gi·ªù</span>
                  </div>
                  <div className="spec-item">
                    <strong>ƒê·ªô t·ªèa h∆∞∆°ng:</strong>
                    <span>Trung b√¨nh - M·∫°nh</span>
                  </div>
                  <div className="spec-item">
                    <strong>NƒÉm ph√°t h√†nh:</strong>
                    <span>2024</span>
                  </div>
                  <div className="spec-item">
                    <strong>Phong c√°ch:</strong>
                    <span>{product.description}</span>
                  </div>
                </div>
              </div>
            )}

            {activeTab === 'reviews' && (
              <div className="tab-panel">
                <div className="reviews-header">
                  <div className="reviews-summary">
                    <h3>ƒê√°nh Gi√° S·∫£n Ph·∫©m</h3>
                    <div className="overall-rating">
                      <div className="rating-score">{calculateAverageRating()}</div>
                      <div className="rating-stars">{'‚òÖ'.repeat(5)}</div>
                      <div className="rating-count">{reviews.length} ƒë√°nh gi√°</div>
                    </div>
                  </div>

                  {/* Add Review Form */}
                  <form className="review-form" onSubmit={handleReviewSubmit}>
                    <h4>Th√™m ƒë√°nh gi√° c·ªßa b·∫°n</h4>
                    <div className="form-group">
                      <label>T√™n c·ªßa b·∫°n:</label>
                      <input
                        type="text"
                        value={newReview.author}
                        onChange={(e) => setNewReview({...newReview, author: e.target.value})}
                        placeholder="Nh·∫≠p t√™n c·ªßa b·∫°n"
                      />
                    </div>
                    <div className="form-group">
                      <label>ƒê√°nh gi√° sao:</label>
                      <div className="star-rating">
                        {[1, 2, 3, 4, 5].map(star => (
                          <button
                            key={star}
                            type="button"
                            className={`star-btn ${newReview.rating >= star ? 'active' : ''}`}
                            onClick={() => setNewReview({...newReview, rating: star})}
                          >
                            ‚òÖ
                          </button>
                        ))}
                      </div>
                    </div>
                    <div className="form-group">
                      <label>B√¨nh lu·∫≠n:</label>
                      <textarea
                        value={newReview.comment}
                        onChange={(e) => setNewReview({...newReview, comment: e.target.value})}
                        placeholder="Chia s·∫ª c·∫£m nh·∫≠n c·ªßa b·∫°n v·ªÅ s·∫£n ph·∫©m..."
                        rows="4"
                      />
                    </div>
                    <button type="submit" className="submit-review-btn">
                      G·ª≠i ƒë√°nh gi√°
                    </button>
                  </form>
                </div>

                {/* Reviews List */}
                <div className="reviews-list">
                  {reviews.length === 0 ? (
                    <div className="no-reviews">
                      <p>Ch∆∞a c√≥ ƒë√°nh gi√° n√†o cho s·∫£n ph·∫©m n√†y.</p>
                      <p>H√£y l√† ng∆∞·ªùi ƒë·∫ßu ti√™n ƒë√°nh gi√°!</p>
                    </div>
                  ) : (
                    reviews.map(review => (
                      <div key={review.id} className="review-item">
                        <div className="review-header">
                          <div className="review-author">
                            <strong>{review.author}</strong>
                            <div className="review-stars">
                              {'‚òÖ'.repeat(review.rating)}
                            </div>
                          </div>
                          <span className="review-date">{review.date}</span>
                        </div>
                        <p className="review-comment">{review.comment}</p>
                      </div>
                    ))
                  )}
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default ProductDetail;